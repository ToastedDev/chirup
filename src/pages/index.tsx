import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { toast } from "react-hot-toast";
import { LoadingPage, LoadingSpinner } from "~/components/loading";
import { PostView } from "~/components/postView";
import { api } from "~/utils/api";

const CreatePostWizard = () => {
  const [input, setInput] = useState("");

  const ctx = api.useContext();

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;
      if (errorMessage && errorMessage[0]) {
        toast.error(errorMessage[0]);
      } else {
        toast.error("Failed to post! Please try again later.");
      }
    },
  });

  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full items-center">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        width={56}
        height={56}
        className="rounded-full"
      />
      <input
        placeholder="How's life today?"
        className="grow bg-transparent pl-3 outline-none"
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        onKeyDown={(e) => {
          if (e.key !== "Enter") return;
          e.preventDefault();
          if (input === "") return;
          mutate({ content: input });
        }}
        disabled={isPosting}
      />
      {input !== "" && !isPosting && (
        <button onClick={() => mutate({ content: input })}>Post</button>
      )}
      {isPosting && (
        <div className="flex items-center justify-center">
          <LoadingSpinner size={20} />
        </div>
      )}
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading)
    return (
      <div className="border-b border-neutral-700 p-4">
        <div className="flex animate-pulse gap-3">
          <div className="h-14 w-14 rounded-full bg-neutral-800"></div>
          <div className="flex flex-col">
            <div className="flex gap-1 text-xs text-slate-300">
              <span className="h-3.5 w-40 rounded bg-neutral-800"></span>
            </div>
            <span className="mt-1.5 h-7 w-80 rounded bg-neutral-800"></span>
          </div>
        </div>
      </div>
    );

  if (!data) return <div>Something went wrong</div>;

  return (
    <div className="scrollbar-hide flex grow flex-col overflow-y-scroll">
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isSignedIn, isLoaded: userLoaded } = useUser();

  // start fetching asap
  api.posts.getAll.useQuery();

  if (!userLoaded)
    return (
      <>
        <main className="overflow-none flex h-screen justify-center">
          <div className="flex h-full w-full flex-col items-center justify-center border-x border-neutral-700 md:max-w-2xl">
            <LoadingPage size={60} />
          </div>
        </main>
      </>
    );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="overflow-none flex h-screen justify-center">
        <div className="flex h-full w-full flex-col border-x border-neutral-700 md:max-w-2xl">
          <div className="border-b border-neutral-700 p-4">
            {isSignedIn ? <CreatePostWizard /> : <SignInButton />}
          </div>

          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
